@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject BRTF_Booking.Data.BRTFContext context


<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
    <li class="nav-item">
        @if (User.IsInRole("Admin"))
        {
            var activeUser = context.Admins.Where(a => a.Email == User.Identity.Name).FirstOrDefault();
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Logged in as @activeUser.FName @activeUser.LName</a>
        }
        @if (User.IsInRole("Student"))
        {
            var activeUser = context.Users.Where(a => a.Email == User.Identity.Name).FirstOrDefault();
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Logged in as @activeUser.FName @activeUser.LName</a>
        }
        @if (User.IsInRole("Top-Level Admin"))
        {
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Logged in as Top-Level Admin</a>
        }

    </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <!--
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        -->
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
